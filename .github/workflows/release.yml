name: Go Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '^1.22'
      - uses: actions/setup-node@v4
        with:
          node-version: 22

      #      - name: Cache Node.js modules
      #        uses: actions/cache@v2
      #        with:
      #          # npm cache files are stored in `~/.npm` on Linux/macOS
      #          path: ~/.npm
      #          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
      #          restore-keys: |
      #            ${{ runner.OS }}-node-
      #            ${{ runner.OS }}-

      - name: Install Dependencies
        run: |
          cd unrpapp
          npm install
          npm run build

      - name: Build
        run: |
          
          # compile worker.js separately
          # compile them before project so .js would present in public directory of project before main build
          tsc --project workers.tsconfig.json
          
          # build react
          npm install
          npm run build
          
          # compile wasm
          GOOS=js GOARCH=wasm go build -o wasm/unrpa.wasm wasm/main.go
          cp wasm/unrpa.wasm build
          
          # substitute version
          GIT_TAG=$(git describe --tags)
          GIT_SHORT_HASH=$(git rev-parse --short HEAD)
          NEW_TAG="${GIT_TAG}-${GIT_SHORT_HASH}" 
          FIND_PATTERN="ITWILLBEREPLACEDWITHVERSION"
          find ./build -type f -exec sed -i "s/$FIND_PATTERN/$NEW_TAG/g" {} \;



      - shell: bash
        run: |
          # The following 2 lines are not really necessary,
          # because we do not intend to push current branch.
          # But we choose to use target branch name as a temporary local work branch,
          # thus avoid a potential error of committing to the trigger branch.
          git branch -f gh-pages HEAD
          git checkout gh-pages
  
          # The commit and push happen to work without authentication
          # https://docs.github.com/en/actions/reference/authentication-in-a-workflow
          git config user.name "Github Pages Overwriter"
          git config user.email "GithubPagesOverwriter@users.noreply.github.com"
  
          # The previous commit message may contain reference to github issues,
          # we wipe it out, so that it won't show up in the inevitable duplicate commit.
          git commit --amend -m "This commit will be automatically published"
  
          # Generate such a new file to make sure the subsequent commit would succeed
          # Such a file WITHOUT leading dot (.) is also visible in outcome website.
          # FYI: filename with leading dot (.) or underscore (_) would be ignored by Jekyll,
          # which Github Pages depends on. So we use a normal filename here.
          date > ${{ inputs.source-directory}}/publish_date.txt
          git add --force build
          git commit -m "Automated publish"

      - name: Push the build output to github pages
        shell: bash
        ##if: ${{ inputs.source-directory == '.' }}
        # Astonishedly, the "if" command does not work in an action shipped to marketplace,
        # so that there is even a 3rd-party github action to do that
        # (https://github.com/marketplace/actions/conditional-value-for-github-action)
        # But that seems like an overkill. So, we'd use "if" in bash instead.
        run: >  # https://yaml-multiline.info/
          if [ "build" == "." ]; then
          git push -f origin HEAD:refs/heads/gh-pages
          else
          # Inspired from https://gist.github.com/cobyism/4730490#gistcomment-1374989
          git push -f origin `git subtree split -P build`:refs/heads/gh-pages
          fi
          
          


