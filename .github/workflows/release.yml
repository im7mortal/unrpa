name: Go Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-20.04
    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Check out code
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev build-essential libxxf86vm-dev jq

      - name: Build binary for Linux
        run: |
          GOOS=linux GOARCH=amd64 go build -o unrpa-linux-amd64 .

#      - name: Build binary for Windows
#        run: |
#          GOOS=windows GOARCH=amd64 go build -o unrpa-windows-amd64.exe .

      - name: Build WASM binary
        run: |
          GOOS=js GOARCH=wasm go build -o wasm/unrpa.wasm wasm/main.go

      # Use a single action for creating the release and uploading assets
      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            unrpa-linux-amd64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: List
        run: |
          ls -l
          ls -l wasm


      # Assuming resources.json update is needed in gh-pages branch
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: 'gh-pages'
      - name: List2
        run: |
          ls -l
          ls -l wasm
          cat .gitignore
      - name: Update resources.json
        run: |
          
          git fetch --all
          git checkout gh-pages
          ls -l
          ls -l wasm
          cat .gitignore
          GOOS=js GOARCH=wasm go build -o wasm/unrpa.wasm wasm/main.go


          METADATA=$(curl -s \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ github.ref_name }}/assets")
          
          echo  "https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ github.ref_name }}/assets"
          
          echo $METADATA
          
          LINUX_EXE=$(echo "$METADATA" | jq -r '.[] | select(.name == "unrpa-linux-amd64") | .browser_download_url')
          #WINDOWS_EXE=$(echo "$METADATA" | jq -r '.[] | select(.name == "unrpa-windows-amd64.exe") | .browser_download_url')
          
          
          #echo '{"windows_exe": "${WINDOWS_EXE}", "linux_exe": "${LINUX_EXE}"}' > resources.json
          echo '{ "linux_exe": "${LINUX_EXE}"}' > resources.json
          
          # Configure git
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          # Commit and push changes
          git add resources.json
          git add wasm/unrpa.wasm
          git commit -m 'Update resources.json with latest release URLs'
          git push origin gh-pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
